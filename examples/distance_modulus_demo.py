#!/usr/bin/env python3
"""
–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è—Ç–∞ distance_modulus –≤ –ª–∏–Ω–µ–π–Ω–∏—è –∫–æ—Å–º–æ–ª–æ–≥–∏—á–µ–Ω –º–æ–¥–µ–ª

–¢–æ–∑–∏ —Å–∫—Ä–∏–ø—Ç –ø–æ–∫–∞–∑–≤–∞ –∫–∞–∫ —Å–µ –∏–∑—á–∏—Å–ª—è–≤–∞ –º–æ–¥—É–ª—ä—Ç –Ω–∞ —Ä–∞–∑—Å—Ç–æ—è–Ω–∏–µ –≤ –ª–∏–Ω–µ–π–Ω–∏—è –º–æ–¥–µ–ª
–∏ —Å—Ä–∞–≤–Ω—è–≤–∞ —Å –¥—Ä—É–≥–∏ –∫–æ—Å–º–æ–ª–æ–≥–∏—á–Ω–∏ –º–æ–¥–µ–ª–∏.
"""

import numpy as np
import matplotlib.pyplot as plt
import sys
import os

# –î–æ–±–∞–≤—è–º–µ –ø—ä—Ç—è –∫—ä–º –º–æ–¥—É–ª–∏—Ç–µ
sys.path.insert(0, os.path.join(os.path.dirname(__file__), '..'))

from lib.core.linear_universe import LinearUniverse, create_lcdm_comparison_model


def demonstrate_distance_modulus():
    """
    –î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä–∞ –∫–∞–∫ —Ä–∞–±–æ—Ç–∏ —Ñ—É–Ω–∫—Ü–∏—è—Ç–∞ distance_modulus
    """
    print("=" * 70)
    print("–î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –ù–ê –§–£–ù–ö–¶–ò–Ø–¢–ê DISTANCE_MODULUS")
    print("=" * 70)
    
    # –°—ä–∑–¥–∞–≤–∞–º–µ –º–æ–¥–µ–ª–∏
    linear_model = LinearUniverse(H0_kmsmpc=70.0)
    lcdm_model = create_lcdm_comparison_model(H0=70.0, Om0=0.3, OL0=0.7)
    
    print(f"–õ–∏–Ω–µ–µ–Ω –º–æ–¥–µ–ª: a(t) = k*t, k = {linear_model.k:.2e} [1/s]")
    print(f"–í—ä–∑—Ä–∞—Å—Ç –Ω–∞ –í—Å–µ–ª–µ–Ω–∞—Ç–∞: {linear_model.t0_years/1e9:.2f} –º–ª—Ä–¥ –≥–æ–¥–∏–Ω–∏")
    print(f"ŒõCDM –º–æ–¥–µ–ª: Œ©m = 0.3, Œ©Œõ = 0.7")
    
    print("\n" + "=" * 70)
    print("–°–¢–™–ü–ö–ò –ó–ê –ò–ó–ß–ò–°–õ–Ø–í–ê–ù–ï –ù–ê –ú–û–î–£–õ–ê –ù–ê –†–ê–ó–°–¢–û–Ø–ù–ò–ï")
    print("=" * 70)
    
    # –¢–µ—Å—Ç–≤–∞–º–µ –∑–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ —á–µ—Ä–≤–µ–Ω–æ –æ—Ç–º–µ—Å—Ç–≤–∞–Ω–µ
    z_test = 1.0
    print(f"\n–¢–µ—Å—Ç–≤–∞–º–µ –∑–∞ z = {z_test}")
    
    # –°—Ç—ä–ø–∫–∞ 1: –ù–∞–º–∏—Ä–∞–Ω–µ –Ω–∞ –≤—Ä–µ–º–µ—Ç–æ –Ω–∞ –∏–∑–ª—ä—á–≤–∞–Ω–µ
    print(f"\n1Ô∏è‚É£ –ù–∞–º–∏—Ä–∞–Ω–µ –Ω–∞ –≤—Ä–µ–º–µ—Ç–æ –Ω–∞ –∏–∑–ª—ä—á–≤–∞–Ω–µ:")
    print(f"   a(t_e) = a‚ÇÄ / (1 + z) = 1 / (1 + {z_test}) = {1/(1+z_test):.3f}")
    
    t_e_years = linear_model.age_at_z(z_test) / 1e9
    t_0_years = linear_model.t0_years / 1e9
    
    print(f"   t_e = a_e / k = {t_e_years:.3f} –º–ª—Ä–¥ –≥–æ–¥–∏–Ω–∏")
    print(f"   t_0 = {t_0_years:.3f} –º–ª—Ä–¥ –≥–æ–¥–∏–Ω–∏")
    
    # –°—Ç—ä–ø–∫–∞ 2: –ò–∑—á–∏—Å–ª—è–≤–∞–Ω–µ –Ω–∞ –∫–æ–º–æ–≤–∏–Ω–≥–æ–≤–æ —Ä–∞–∑—Å—Ç–æ—è–Ω–∏–µ
    print(f"\n2Ô∏è‚É£ –ò–∑—á–∏—Å–ª—è–≤–∞–Ω–µ –Ω–∞ –∫–æ–º–æ–≤–∏–Ω–≥–æ–≤–æ —Ä–∞–∑—Å—Ç–æ—è–Ω–∏–µ:")
    print(f"   r = ‚à´[t_e –¥–æ t_0] c/a(t) dt = ‚à´[t_e –¥–æ t_0] c/(kt) dt")
    print(f"   r = (c/k) * ln(t_0/t_e) = (c/k) * ln({t_0_years:.3f}/{t_e_years:.3f})")
    
    r_comoving = linear_model.comoving_distance_at_z(z_test)
    print(f"   r = {r_comoving:.2f} Mpc")
    
    # –°—Ç—ä–ø–∫–∞ 3: Luminosity —Ä–∞–∑—Å—Ç–æ—è–Ω–∏–µ
    print(f"\n3Ô∏è‚É£ Luminosity —Ä–∞–∑—Å—Ç–æ—è–Ω–∏–µ:")
    print(f"   d_L = r * (1 + z) = {r_comoving:.2f} * (1 + {z_test}) = {r_comoving * (1 + z_test):.2f} Mpc")
    
    d_L = linear_model.luminosity_distance_at_z(z_test)
    print(f"   d_L = {d_L:.2f} Mpc")
    
    # –°—Ç—ä–ø–∫–∞ 4: –ú–æ–¥—É–ª –Ω–∞ —Ä–∞–∑—Å—Ç–æ—è–Ω–∏–µ
    print(f"\n4Ô∏è‚É£ –ú–æ–¥—É–ª –Ω–∞ —Ä–∞–∑—Å—Ç–æ—è–Ω–∏–µ:")
    print(f"   Œº = 5 * log‚ÇÅ‚ÇÄ(d_L / 10 pc) = 5 * log‚ÇÅ‚ÇÄ({d_L:.2f} * 10‚Å∂ / 10)")
    print(f"   Œº = 5 * log‚ÇÅ‚ÇÄ({d_L * 1e5:.0f}) = 5 * {np.log10(d_L * 1e5):.3f}")
    
    mu = linear_model.distance_modulus_at_z(z_test)
    print(f"   Œº = {mu:.3f} mag")
    
    # –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å ŒõCDM
    print(f"\nüîÑ –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å ŒõCDM:")
    try:
        # –ê–∫–æ –µ astropy –æ–±–µ–∫—Ç, –∏–∑–ø–æ–ª–∑–≤–∞–º–µ distmod
        mu_lcdm = lcdm_model.distmod(z_test).value
    except AttributeError:
        # –ê–∫–æ –µ –Ω–∞—à–∏—è –∫–ª–∞—Å, –∏–∑–ø–æ–ª–∑–≤–∞–º–µ distance_modulus
        mu_lcdm = lcdm_model.distance_modulus(z_test)
    print(f"   Œº_ŒõCDM = {mu_lcdm:.3f} mag")
    print(f"   –†–∞–∑–ª–∏–∫–∞: {mu - mu_lcdm:.3f} mag")
    
    return linear_model, lcdm_model


def plot_distance_modulus_components():
    """
    –ü–æ–∫–∞–∑–≤–∞ –≥—Ä–∞—Ñ–∏–∫–∏ –Ω–∞ —Ä–∞–∑–ª–∏—á–Ω–∏—Ç–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∏ –Ω–∞ –º–æ–¥—É–ª–∞ –Ω–∞ —Ä–∞–∑—Å—Ç–æ—è–Ω–∏–µ
    """
    print("\n" + "=" * 70)
    print("–ì–†–ê–§–ò–ö–ò –ù–ê –ö–û–ú–ü–û–ù–ï–ù–¢–ò–¢–ï –ù–ê –ú–û–î–£–õ–ê –ù–ê –†–ê–ó–°–¢–û–Ø–ù–ò–ï")
    print("=" * 70)
    
    # –°—ä–∑–¥–∞–≤–∞–º–µ –º–æ–¥–µ–ª–∏
    linear_model = LinearUniverse(H0_kmsmpc=70.0)
    lcdm_model = create_lcdm_comparison_model(H0=70.0, Om0=0.3, OL0=0.7)
    
    # –î–∏–∞–ø–∞–∑–æ–Ω –Ω–∞ —á–µ—Ä–≤–µ–Ω–æ—Ç–æ –æ—Ç–º–µ—Å—Ç–≤–∞–Ω–µ
    z_range = np.logspace(-3, np.log10(3.0), 1000)
    
    # –ò–∑—á–∏—Å–ª—è–≤–∞–º–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∏—Ç–µ –∑–∞ –ª–∏–Ω–µ–π–Ω–∏—è –º–æ–¥–µ–ª
    r_comoving_linear = np.array([linear_model.comoving_distance_at_z(z) for z in z_range])
    d_L_linear = r_comoving_linear * (1 + z_range)
    mu_linear = 5 * np.log10(d_L_linear / 1e-5)
    
    # –ò–∑—á–∏—Å–ª—è–≤–∞–º–µ –∑–∞ ŒõCDM –º–æ–¥–µ–ª–∞
    try:
        # –ê–∫–æ –µ astropy –æ–±–µ–∫—Ç, –∏–∑–ø–æ–ª–∑–≤–∞–º–µ distmod
        mu_lcdm = lcdm_model.distmod(z_range).value
    except AttributeError:
        # –ê–∫–æ –µ –Ω–∞—à–∏—è –∫–ª–∞—Å, –∏–∑–ø–æ–ª–∑–≤–∞–º–µ distance_modulus
        mu_lcdm = lcdm_model.distance_modulus(z_range)
    d_L_lcdm = 10**((mu_lcdm - 25) / 5)
    r_comoving_lcdm = d_L_lcdm / (1 + z_range)
    
    # –ù–∞—Å—Ç—Ä–æ–π–≤–∞–º–µ —à—Ä–∏—Ñ—Ç–æ–≤–µ—Ç–µ
    plt.rcParams['font.sans-serif'] = ['DejaVu Sans', 'Arial Unicode MS']
    plt.rcParams['axes.unicode_minus'] = False
    
    # –°—ä–∑–¥–∞–≤–∞–º–µ –≥—Ä–∞—Ñ–∏–∫–∏
    fig, axes = plt.subplots(2, 2, figsize=(14, 10))
    
    # 1. –ö–æ–º–æ–≤–∏–Ω–≥–æ–≤–æ —Ä–∞–∑—Å—Ç–æ—è–Ω–∏–µ
    axes[0, 0].loglog(z_range, r_comoving_linear, 'r-', linewidth=2, label='–õ–∏–Ω–µ–µ–Ω –º–æ–¥–µ–ª')
    axes[0, 0].loglog(z_range, r_comoving_lcdm, 'b--', linewidth=2, label='ŒõCDM –º–æ–¥–µ–ª')
    axes[0, 0].set_xlabel('–ß–µ—Ä–≤–µ–Ω–æ –æ—Ç–º–µ—Å—Ç–≤–∞–Ω–µ z')
    axes[0, 0].set_ylabel('–ö–æ–º–æ–≤–∏–Ω–≥–æ–≤–æ —Ä–∞–∑—Å—Ç–æ—è–Ω–∏–µ r [Mpc]')
    axes[0, 0].set_title('–ö–æ–º–æ–≤–∏–Ω–≥–æ–≤–æ —Ä–∞–∑—Å—Ç–æ—è–Ω–∏–µ')
    axes[0, 0].grid(True, alpha=0.3)
    axes[0, 0].legend()
    
    # 2. Luminosity —Ä–∞–∑—Å—Ç–æ—è–Ω–∏–µ
    axes[0, 1].loglog(z_range, d_L_linear, 'r-', linewidth=2, label='–õ–∏–Ω–µ–µ–Ω –º–æ–¥–µ–ª')
    axes[0, 1].loglog(z_range, d_L_lcdm, 'b--', linewidth=2, label='ŒõCDM –º–æ–¥–µ–ª')
    axes[0, 1].set_xlabel('–ß–µ—Ä–≤–µ–Ω–æ –æ—Ç–º–µ—Å—Ç–≤–∞–Ω–µ z')
    axes[0, 1].set_ylabel('Luminosity —Ä–∞–∑—Å—Ç–æ—è–Ω–∏–µ d_L [Mpc]')
    axes[0, 1].set_title('Luminosity —Ä–∞–∑—Å—Ç–æ—è–Ω–∏–µ')
    axes[0, 1].grid(True, alpha=0.3)
    axes[0, 1].legend()
    
    # 3. –ú–æ–¥—É–ª –Ω–∞ —Ä–∞–∑—Å—Ç–æ—è–Ω–∏–µ
    axes[1, 0].semilogx(z_range, mu_linear, 'r-', linewidth=2, label='–õ–∏–Ω–µ–µ–Ω –º–æ–¥–µ–ª')
    axes[1, 0].semilogx(z_range, mu_lcdm, 'b--', linewidth=2, label='ŒõCDM –º–æ–¥–µ–ª')
    axes[1, 0].set_xlabel('–ß–µ—Ä–≤–µ–Ω–æ –æ—Ç–º–µ—Å—Ç–≤–∞–Ω–µ z')
    axes[1, 0].set_ylabel('–ú–æ–¥—É–ª –Ω–∞ —Ä–∞–∑—Å—Ç–æ—è–Ω–∏–µ Œº [mag]')
    axes[1, 0].set_title('–ú–æ–¥—É–ª –Ω–∞ —Ä–∞–∑—Å—Ç–æ—è–Ω–∏–µ')
    axes[1, 0].grid(True, alpha=0.3)
    axes[1, 0].legend()
    
    # 4. –†–∞–∑–ª–∏–∫–∞ –≤ –º–æ–¥—É–ª–∞ –Ω–∞ —Ä–∞–∑—Å—Ç–æ—è–Ω–∏–µ
    axes[1, 1].semilogx(z_range, mu_linear - mu_lcdm, 'g-', linewidth=2)
    axes[1, 1].axhline(0, color='black', linestyle='--', alpha=0.5)
    axes[1, 1].set_xlabel('–ß–µ—Ä–≤–µ–Ω–æ –æ—Ç–º–µ—Å—Ç–≤–∞–Ω–µ z')
    axes[1, 1].set_ylabel('–†–∞–∑–ª–∏–∫–∞ Œº_linear - Œº_ŒõCDM [mag]')
    axes[1, 1].set_title('–†–∞–∑–ª–∏–∫–∞ –≤ –º–æ–¥—É–ª–∞ –Ω–∞ —Ä–∞–∑—Å—Ç–æ—è–Ω–∏–µ')
    axes[1, 1].grid(True, alpha=0.3)
    
    plt.tight_layout()
    plt.savefig('distance_modulus_components.png', dpi=300, bbox_inches='tight')
    plt.show()
    
    print("üìä –ì—Ä–∞—Ñ–∏–∫–∏—Ç–µ —Å–∞ –∑–∞–ø–∞–∑–µ–Ω–∏ –∫–∞—Ç–æ 'distance_modulus_components.png'")


def demonstrate_integration():
    """
    –î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä–∞ –∫–∞–∫ —Ä–∞–±–æ—Ç–∏ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–∞–Ω–µ—Ç–æ –∑–∞ –∫–æ–º–æ–≤–∏–Ω–≥–æ–≤–æ —Ä–∞–∑—Å—Ç–æ—è–Ω–∏–µ
    """
    print("\n" + "=" * 70)
    print("–î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –ù–ê –ò–ù–¢–ï–ì–†–ò–†–ê–ù–ï–¢–û –ó–ê –ö–û–ú–û–í–ò–ù–ì–û–í–û –†–ê–ó–°–¢–û–Ø–ù–ò–ï")
    print("=" * 70)
    
    # –°—ä–∑–¥–∞–≤–∞–º–µ –º–æ–¥–µ–ª
    linear_model = LinearUniverse(H0_kmsmpc=70.0)
    
    # –¢–µ—Å—Ç–≤–∞–º–µ –∑–∞ —Ä–∞–∑–ª–∏—á–Ω–∏ z —Å—Ç–æ–π–Ω–æ—Å—Ç–∏
    z_values = [0.1, 0.5, 1.0, 2.0]
    
    print(f"–õ–∏–Ω–µ–µ–Ω –º–æ–¥–µ–ª: a(t) = k*t, k = {linear_model.k:.2e} [1/s]")
    print(f"–°–∫–æ—Ä–æ—Å—Ç –Ω–∞ —Å–≤–µ—Ç–ª–∏–Ω–∞—Ç–∞: c = {linear_model.c:.0f} km/s")
    
    print(f"\n{'z':<8} {'t_e [–º–ª—Ä–¥ –≥.]':<15} {'t_0 [–º–ª—Ä–¥ –≥.]':<15} {'ln(t_0/t_e)':<12} {'r [Mpc]':<10}")
    print("-" * 60)
    
    for z in z_values:
        t_e = linear_model.age_at_z(z) / 1e9
        t_0 = linear_model.t0_years / 1e9
        ln_ratio = np.log(t_0 / t_e)
        r = linear_model.comoving_distance_at_z(z)
        
        print(f"{z:<8.1f} {t_e:<15.3f} {t_0:<15.3f} {ln_ratio:<12.3f} {r:<10.2f}")
    
    print(f"\n–§–æ—Ä–º—É–ª–∞: r = (c/k) * ln(t_0/t_e)")
    print(f"–ö—ä–¥–µ—Ç–æ: c/k = {linear_model.c / linear_model.k / 1e9:.3f} –º–ª—Ä–¥ –∫–º = {linear_model.c / linear_model.k / 3.086e19:.1f} Mpc")
    
    # –ê–Ω–∞–ª–∏—Ç–∏—á–µ–Ω vs —á–∏—Å–ª–µ–Ω–µ–Ω –∏–Ω—Ç–µ–≥—Ä–∞–ª
    print(f"\n" + "=" * 50)
    print("–°–†–ê–í–ù–ï–ù–ò–ï: –ê–ù–ê–õ–ò–¢–ò–ß–ï–ù vs –ß–ò–°–õ–ï–ù–ï–ù –ò–ù–¢–ï–ì–†–ê–õ")
    print("=" * 50)
    
    print(f"{'z':<8} {'–ê–Ω–∞–ª–∏—Ç–∏—á–µ–Ω':<12} {'–ß–∏—Å–ª–µ–Ω–µ–Ω':<12} {'–†–∞–∑–ª–∏–∫–∞':<12}")
    print("-" * 44)
    
    for z in z_values:
        # –ê–Ω–∞–ª–∏—Ç–∏—á–µ–Ω —Ä–µ–∑—É–ª—Ç–∞—Ç
        r_analytical = linear_model.comoving_distance_at_z(z)
        
        # –ß–∏—Å–ª–µ–Ω–µ–Ω –∏–Ω—Ç–µ–≥—Ä–∞–ª (—Å–∏–º—É–ª–∞—Ü–∏—è)
        t_e = linear_model.age_at_z(z) * 365.25 * 24 * 3600  # –≤ —Å–µ–∫—É–Ω–¥–∏
        t_0 = linear_model.t0_years * 365.25 * 24 * 3600  # –≤ —Å–µ–∫—É–Ω–¥–∏
        
        # –ò–Ω—Ç–µ–≥—Ä–∞–ª –æ—Ç t_e –¥–æ t_0 –Ω–∞ c/(k*t) dt
        from scipy.integrate import quad
        integrand = lambda t: linear_model.c / (linear_model.k * t)
        r_numerical, _ = quad(integrand, t_e, t_0)
        r_numerical_mpc = r_numerical / 3.086e19  # –≤ Mpc
        
        diff = abs(r_analytical - r_numerical_mpc)
        print(f"{z:<8.1f} {r_analytical:<12.3f} {r_numerical_mpc:<12.3f} {diff:<12.6f}")
    
    print("\n‚úÖ –ê–Ω–∞–ª–∏—Ç–∏—á–Ω–∏—è—Ç –∏ —á–∏—Å–ª–µ–Ω–Ω–∏—è—Ç –∏–Ω—Ç–µ–≥—Ä–∞–ª —Å–µ —Å—ä–≥–ª–∞—Å—É–≤–∞—Ç –æ—Ç–ª–∏—á–Ω–æ!")


def main():
    """–ì–ª–∞–≤–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üéØ –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –ù–ê DISTANCE_MODULUS –§–£–ù–ö–¶–ò–Ø–¢–ê")
    print("=" * 70)
    
    # –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –Ω–∞ –∏–∑—á–∏—Å–ª–µ–Ω–∏—è—Ç–∞
    linear_model, lcdm_model = demonstrate_distance_modulus()
    
    # –ì—Ä–∞—Ñ–∏–∫–∏ –Ω–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∏—Ç–µ
    plot_distance_modulus_components()
    
    # –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –Ω–∞ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–∞–Ω–µ—Ç–æ
    demonstrate_integration()
    
    print("\n" + "=" * 70)
    print("‚úÖ –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø–¢–ê –ó–ê–í–™–†–®–ò –£–°–ü–ï–®–ù–û!")
    print("=" * 70)
    print("üìä –°—ä–∑–¥–∞–¥–µ–Ω–∏ —Ñ–∞–π–ª–æ–≤–µ:")
    print("   - distance_modulus_components.png")
    print("üìù –ö–ª—é—á–æ–≤–∏ —Ç–æ—á–∫–∏:")
    print("   - –õ–∏–Ω–µ–π–Ω–∏—è—Ç –º–æ–¥–µ–ª –∏–∑–ø–æ–ª–∑–≤–∞ –∞–Ω–∞–ª–∏—Ç–∏—á–µ–Ω –∏–Ω—Ç–µ–≥—Ä–∞–ª")
    print("   - r = (c/k) * ln(t_0/t_e) –∑–∞ –∫–æ–º–æ–≤–∏–Ω–≥–æ–≤–æ —Ä–∞–∑—Å—Ç–æ—è–Ω–∏–µ")
    print("   - Œº = 5 * log‚ÇÅ‚ÇÄ(d_L / 10 pc) –∑–∞ –º–æ–¥—É–ª –Ω–∞ —Ä–∞–∑—Å—Ç–æ—è–Ω–∏–µ")
    print("   - –û—Ç–ª–∏—á–Ω–æ—Ç–æ —Å—ä–≥–ª–∞—Å—É–≤–∞–Ω–µ –ø–æ–∫–∞–∑–≤–∞ –ø—Ä–∞–≤–∏–ª–Ω–æ—Å—Ç—Ç–∞ –Ω–∞ —Ñ–æ—Ä–º—É–ª–∏—Ç–µ")


if __name__ == "__main__":
    main() 